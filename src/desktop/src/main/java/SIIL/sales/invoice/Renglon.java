
package SIIL.sales.invoice;

import SIIL.Server.Database;
import core.Dialog;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import process.Moneda;
import stock.Flow;

/**
 *
 * @author Azael Reyes
 */
public class Renglon extends javax.swing.JPanel implements core.DialogContent {

    private core.Dialog dialog;
    private core.Renglon renglon;
    private Database dbserver;
    private sales.Invoice invoice;
    
    private void closeDatabase() 
    {
        if(dbserver != null)
        {
            dbserver.close();
            dbserver = null;
        }
    }
        
    private void openDatabase(boolean  reclicleConextion) throws IOException, ParserConfigurationException, SAXException
    {
        try 
        {
            SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            if(reclicleConextion)
            {
                if(dbserver != null)
                {
                    if(dbserver.getConnection().isValid(50))
                    {
                        return;
                    }
                    else
                    {
                        ;
                    }
                }
                else
                {
                    
                }
            }
            else
            {
                if(dbserver != null)
                {
                    if(!dbserver.getConnection().isClosed())dbserver.close();
                    dbserver = null;                    
                }
            }
            dbserver = null;
            dbserver = new Database(serverConfig);
        } 
        catch (IOException | ClassNotFoundException | SQLException | ParserConfigurationException | SAXException ex) 
        {
            JOptionPane.showMessageDialog(this,
                ex.getMessage(),
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    /**
     * Creates new form Renglon
     * @param dbserver
     */
    public Renglon(Database dbserver, sales.Invoice invoice) 
    {
        initComponents();
        this.dbserver = dbserver;
        this.invoice = invoice;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grMoneda = new javax.swing.ButtonGroup();
        lbName = new javax.swing.JLabel();
        txNumber = new javax.swing.JTextField();
        btItem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txCant = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txPU = new javax.swing.JTextField();
        rdMXN = new javax.swing.JRadioButton();
        rdUSD = new javax.swing.JRadioButton();
        txComment = new javax.swing.JTextField();
        txUnidad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        lbName.setText("NÃºmero");

        txNumber.setEditable(false);
        txNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txNumberKeyReleased(evt);
            }
        });

        btItem.setText("...");
        btItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btItemActionPerformed(evt);
            }
        });

        jLabel1.setText("Cantidad");

        txCant.setEditable(false);
        txCant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txCantKeyPressed(evt);
            }
        });

        jLabel2.setText("P/U");

        txPU.setEditable(false);

        rdMXN.setText("MXN");
        rdMXN.setEnabled(false);
        rdMXN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdMXNActionPerformed(evt);
            }
        });

        rdUSD.setText("USD");
        rdUSD.setEnabled(false);
        rdUSD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdUSDActionPerformed(evt);
            }
        });

        jLabel3.setText("Unidad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txComment, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txUnidad, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txCant, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txPU, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rdMXN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdUSD)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName)
                    .addComponent(txNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btItem)
                    .addComponent(txComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txPU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdMXN)
                    .addComponent(rdUSD))
                .addContainerGap(67, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btItemActionPerformed
        stock.SearchHequi srh = new stock.SearchHequi(stock.SearchHequiTableModel.Mode.SelectItem);
        core.Dialog dlg = new core.Dialog(srh);
        dlg.setContent(srh);
        if(srh.getSelection() != null)
        {
            renglon = new core.Renglon();
            renglon.add(srh.getSelection());
            try 
            {
                renglon.upState(dbserver, Flow.Estado.VENDIDO);
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            txNumber.setText(renglon.getNumber());
            txComment.setText(renglon.getDescripcion());
            //txCant.setEditable(true);
            txPU.setEditable(true);
            rdMXN.setEnabled(true);
            rdUSD.setEnabled(true);
            if(renglon.getUnidad() != null ) 
            {
                txUnidad.setText(renglon.getUnidad());
            }
            else
            {
                String unidad = "Unidad";
                txUnidad.setText(unidad);
                try 
                {
                    renglon.upUnidad(dbserver, unidad);
                }
                catch (SQLException ex) 
                {
                    Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        else
        {
            //txCant.setEditable(false);
        }
    }//GEN-LAST:event_btItemActionPerformed

    private void txCantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txCantKeyPressed
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
        {
            //openDatabase(true);
            int cantidad = 0;
            if(txCant.getText().length() > 0)
            {
                cantidad = Integer.parseInt(txCant.getText());
            }
            else
            {
                txPU.setEditable(false);
                rdMXN.setEnabled(false);
                rdUSD.setEnabled(false);
                return;
            }
            try 
            {
                List<Flow> list = Flow.getCantidad(dbserver, txNumber.getText(), cantidad, Flow.Estado.LIBRE);
                if(cantidad != list.size())
                {
                    int resp = JOptionPane.showConfirmDialog(
                    this,
                    "Se solicitaron '" + cantidad + "' pero solo hay " + list.size() + ", Â¿Desea agregar esas piezas?",
                    "Confirmar operaciÃ³n",
                    JOptionPane.YES_NO_OPTION);
                    if(resp == JOptionPane.YES_OPTION)
                    {
                        renglon = new core.Renglon();
                        renglon.add(list);
                        renglon.download(dbserver,invoice);
                        txCant.setText(String.valueOf(list.size()));
                        txPU.setEditable(true);
                        rdMXN.setEnabled(true);
                        rdUSD.setEnabled(true);
                    }
                    else
                    {
                        txPU.setEditable(false);
                        rdMXN.setEnabled(false);
                        rdUSD.setEnabled(false);
                    }
                }/*
                else
                {
                    renglon = new core.Renglon();
                    renglon.add(list);
                    renglon.download(dbserver,invoice);                    
                    txPU.setEditable(true);
                    rdMXN.setEnabled(true);
                    rdUSD.setEnabled(true);
                }*/
            }
            catch (SQLException ex) 
            {
                //Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);                
                JOptionPane.showMessageDialog(
                    this,
                    ex.getMessage(),
                    "Error Interno",
                    JOptionPane.ERROR_MESSAGE
                );
                txPU.setEditable(false);
                rdMXN.setEnabled(false);
                rdUSD.setEnabled(false);
                return;
            }
        }
    }//GEN-LAST:event_txCantKeyPressed

    private void rdMXNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdMXNActionPerformed
        try 
        {
            double mount = 0;
            mount = Double.parseDouble(txPU.getText());
            renglon.upCostSale(dbserver, mount, Moneda.MXN);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rdMXNActionPerformed

    private void rdUSDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdUSDActionPerformed
        try 
        {
            double mount = 0;
            mount = Double.parseDouble(txPU.getText());
            renglon.upCostSale(dbserver, mount, Moneda.USD);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rdUSDActionPerformed

    private void txNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNumberKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            try 
            {
                openDatabase(true);
                Flow flow = new Flow(-1);
                flow.nextItemFree(dbserver, txNumber.getText());
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SAXException ex) {
                Logger.getLogger(Renglon.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txNumberKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btItem;
    private javax.swing.ButtonGroup grMoneda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbName;
    private javax.swing.JRadioButton rdMXN;
    private javax.swing.JRadioButton rdUSD;
    private javax.swing.JTextField txCant;
    private javax.swing.JTextField txComment;
    private javax.swing.JTextField txNumber;
    private javax.swing.JTextField txPU;
    private javax.swing.JTextField txUnidad;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setDialog(Dialog dialog) 
    {
        this.dialog = dialog;
    }

    /**
     * @return the flow
     */
    public core.Renglon getRenglon() 
    {
        return renglon;
    }
}
