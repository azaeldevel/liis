
package SIIL.purchase.cr;

import SIIL.Server.Database;
import SIIL.Server.MySQL;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author Azael
 */
public class Pay extends javax.swing.JInternalFrame {

    /**
     * Creates new form pay
     */
    public Pay(CRSIIL cr) 
    {
        initComponents();
        this.cr = cr;
        rdType.add(opCash);
        rdType.add(opCheck);
        rdType.add(opTrans);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdType = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txEnding = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        opCash = new javax.swing.JRadioButton();
        opCheck = new javax.swing.JRadioButton();
        opTrans = new javax.swing.JRadioButton();
        btPay = new javax.swing.JButton();

        setTitle("Pagar");

        jLabel1.setText("Terminacion de pago");

        jLabel2.setText("Tipo");

        opCash.setText("Efectivo");

        opCheck.setText("Cheque");
        opCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opCheckActionPerformed(evt);
            }
        });

        opTrans.setText("Transferencia");

        btPay.setText("Pagar");
        btPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(txEnding, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(opCash)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(opCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(opTrans)))
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btPay)
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opCash)
                    .addComponent(opCheck)
                    .addComponent(opTrans))
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txEnding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btPay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPayActionPerformed
        
        if(opCash.isSelected())
        {
            cr.setPayType("cash");
        }
        else if(opCheck.isSelected())
        {
            cr.setPayType("check");
        }
        else if(opTrans.isSelected() )
        {
            cr.setPayType("trans");
        }
        else
        {
            JOptionPane.showMessageDialog(this,
                "Seleccione un tipo de pago",
                "Error Externo",
                JOptionPane.ERROR_MESSAGE
                );
            return;            
        }
        
        //
        if(txEnding.getText().length() > 8 & opCash.isSelected() == false)
        {
            JOptionPane.showMessageDialog(this,
                "Como máximo se acepta 8 digitos",
                "Error Externo",
                JOptionPane.ERROR_MESSAGE
                );
            return;  
        }
        if(txEnding.getText().length() < 4  & opCash.isSelected() == false)
        {
            JOptionPane.showMessageDialog(this,
                "Como mínimo se acepta 4 digitos",
                "Error Externo",
                JOptionPane.ERROR_MESSAGE
                );
            return;  
        }
        if(!txEnding.getText().matches("^[0-9]+$")  & opCash.isSelected() == false)
        {
            JOptionPane.showMessageDialog(this,
                "Solo se aceptan digitos",
                "Error Externo",
                JOptionPane.ERROR_MESSAGE
                );
            return;  
        }
        if( opCash.isSelected() == false) cr.setPayEnding(txEnding.getText());
        
        //
        cr.setPayUser(SIIL.servApp.cred.getUser().getAlias());
        
        
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            JOptionPane.showMessageDialog(this,
                "Fallo importacion.",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        boolean res = false;
        try 
        {
            res = cr.pay(dbserver);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(List.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(res)
        {
            try 
            {
                dbserver.commit();
                JOptionPane.showMessageDialog(this,"Pago realizado correctamente");
                dispose();
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(List.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            try 
            {
                dbserver.rollback();
                JOptionPane.showMessageDialog(this, "Un erro desconocido ocurrio, no se realizo el pago","Error Interno", JOptionPane.ERROR_MESSAGE);
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(List.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btPayActionPerformed

    private void opCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opCheckActionPerformed
        //solo para efectivo no se captura terminacion
        if(opCash.isSelected())
        {
            txEnding.setEditable(false);
        }
        else
        {
            txEnding.setEditable(true);
        }
    }//GEN-LAST:event_opCheckActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton opCash;
    private javax.swing.JRadioButton opCheck;
    private javax.swing.JRadioButton opTrans;
    private javax.swing.ButtonGroup rdType;
    private javax.swing.JTextField txEnding;
    // End of variables declaration//GEN-END:variables
    CRSIIL cr;
}
