
package SIIL.Servicios;

import SIIL.Server.Company;
import SIIL.Server.Database;
import SIIL.Server.Forklift;
import SIIL.Server.MySQL;
import SIIL.Server.Titem;
import java.awt.Window;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author areyes
 */
public class MovservB extends javax.swing.JPanel {

    /**
     * Creates new form Movserv
     */
    public MovservB(String bd) 
    {
        initComponents();
        BD = bd;
    }

    public MovservB(String bd, Forklift f, Company c) 
    {
        initComponents();
        BD = bd;
        forklift = f;
        comp = c;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txBo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txFolio = new javax.swing.JTextField();
        btChange = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txDate = new javax.swing.JTextField();
        btClose = new javax.swing.JButton();

        jLabel1.setText("Bateria");

        txBo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txBoFocusLost(evt);
            }
        });

        jLabel7.setText("Folio");

        btChange.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIIL/resources/editclear.png"))); // NOI18N
        btChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btChangeActionPerformed(evt);
            }
        });

        jLabel8.setText("Fecha");

        btClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SIIL/resources/dialog-close.png"))); // NOI18N
        btClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txDate, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btChange)
                        .addGap(18, 18, 18)
                        .addComponent(btClose, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(txBo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txFolio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txBo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean validFhMov() 
    {
        if(txDate.getText().matches("^(0?[1-9]|[12][0-9]|3[01])[\\/](0?[1-9]|1[012])[\\/]\\d{4}$"))
        {
            return true;
        }
        else
        {
            JOptionPane.showMessageDialog(this, "La fecha es incorrecta, el formato correcto es dd/mm/yyyy", "Error Externo", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean validFolio() 
    {
        if(txFolio.getText().matches("^00[1-9]|0[1-9][0-9]|[12][0-9][0-9]|300$"))// 
        {
            return true;
        }
        else
        {
            JOptionPane.showMessageDialog(this, "En el folio es un valor numerico entre 1 y 300.", "Error Externo", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
        
    private void btChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btChangeActionPerformed
        if(Bo == null) 
        {
            return;
        }
        
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);
        }
        
        if(dbserver.getConnection() == null)
        {
            JOptionPane.showMessageDialog(this,
                "Conexi√≥n a Servidor Invalida",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
                );
            return;
        }
        /*SIIL.Server.Building build = new SIIL.Server.Building(SIIL.servApp.card.getBD(),"999",SIIL.servApp.card.getSuc());
        if(build.isMatriz(conn))
        {
            ;
        }
        else if(Bo.checkRequest(conn,SIIL.servApp.card.getSuc()))
        {         
            ;
        }
        else
        {
            JOptionPane.showMessageDialog(this, "El equipo solicitado pertenece a otra sucursal", "Error Externo", JOptionPane.ERROR_MESSAGE);
            return;
        }*/
        
        SIIL.Server.Movimiento movser = new SIIL.Server.Movimiento();
        movser.setItemClass("serv");
        movser.setBD(BD);
        if(validFolio())
        {
            movser.setFolio(txFolio.getText());
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Folio invalido", "Error Externo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(validFhMov())
        {
            try 
            {
                movser.setFhMov(txDate.getText());
            } 
            catch (ParseException ex) 
            {
                Logger.getLogger(MovCreate.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Fecha invalida", "Error Externo", JOptionPane.ERROR_MESSAGE);
            return;
        }  
        
        forklift.setBD(BD);
        forklift.setBattery(Bo);
        
        //boolean flB = forklift.linkBattery(conn);
        ArrayList<Titem> arr = new ArrayList<Titem>();
        arr.add(Bo);
        int rg = 0;
        movser.setSucursal(BD);
        movser.setCompany(comp);
        try 
        {
            rg = movser.insert(dbserver, arr);
        } 
        catch (Exception ex) 
        {
            Logger.getLogger(MovservB.class.getName()).log(Level.SEVERE, null, ex);
        }
        //if(flB && rg == 3)
        {
            try 
            {
                dbserver.commit();
                JOptionPane.showMessageDialog(this, "Datos guardados");
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(MovservB.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        //else
        {
            try 
            {
                dbserver.rollback();
                JOptionPane.showMessageDialog(this, "Ocurio un error desconocido, los datos no fueron guardados"
                    , "Error Externo", JOptionPane.ERROR_MESSAGE);
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(MovservB.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        dbserver.close();
    }//GEN-LAST:event_btChangeActionPerformed

    private void txBoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txBoFocusLost
        Bo = new SIIL.Server.Battery();
        Bo.setNumber(txBo.getText());
        Bo.setBD(BD);
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);
        }
        
        if(dbserver.getConnection() == null)
        {
            JOptionPane.showMessageDialog(this,
                "Conexion a Servidor Invalida",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
                );
            return;
        }
        if(Bo.checkExistBt(dbserver))
        {
           ;
        }
        else
        {
            JOptionPane.showMessageDialog(this, "El numero econ√≥mico de la bateria es desconocido", 
                            "Error Externo", JOptionPane.ERROR_MESSAGE);
        }
        dbserver.close();        
    }//GEN-LAST:event_txBoFocusLost

    private void btCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCloseActionPerformed
        ((Window)SwingUtilities.getWindowAncestor(this)).dispose();
    }//GEN-LAST:event_btCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btChange;
    private javax.swing.JButton btClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField txBo;
    private javax.swing.JTextField txDate;
    private javax.swing.JTextField txFolio;
    // End of variables declaration//GEN-END:variables

    SIIL.Server.Battery Bo;
    SIIL.Server.Battery Bf;
    String BD;
    Forklift forklift;
    Company comp;
}
