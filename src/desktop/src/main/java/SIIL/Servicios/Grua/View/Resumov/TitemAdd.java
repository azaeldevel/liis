
package SIIL.Servicios.Grua.View.Resumov;

import SIIL.Server.Database;
import SIIL.Server.MySQL;
import SIIL.Server.Titem;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author Azael
 */
public class TitemAdd extends javax.swing.JInternalFrame {

    /**
     * Creates new form TitemAdd
     */
    public TitemAdd(JTable tb,String tclass,String opOwner, ArrayList<SIIL.Server.Titem> T,String bd) {
        initComponents(); 
        init2(tb, tclass, T, opOwner, bd);
    }
    private void init2(JTable tb, String tclass, ArrayList<Titem> T, String opOwner, String bd) 
    {
        tbTitems = tb;
        titemClass = tclass;
        titems = T;
        owner = opOwner;
        BD = bd;
        if(tclass.equals("charger") || tclass.equals("battery"))
        {
            txHoro.setEnabled(false);
        }
        if(opOwner.equals("SIIL"))
        {
            txNumEco.setEnabled(true);
        }
        else if(opOwner.equals("client"))
        {
            txNumEco.setEnabled(false);            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        txMarca = new javax.swing.JTextField();
        btAdd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txHoro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txNumEco = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txSerie = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txModelo = new javax.swing.JTextField();
        chLink = new javax.swing.JCheckBox();

        setClosable(true);

        jLabel4.setText("Marca");

        btAdd.setText("Agregar");
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        jLabel5.setText("Horometro");

        jLabel1.setText("Número Económico");

        txNumEco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txNumEcoFocusLost(evt);
            }
        });
        txNumEco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txNumEcoKeyReleased(evt);
            }
        });

        jLabel2.setText("Serie");

        jLabel3.setText("Modelo");

        chLink.setText("Enlazar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addComponent(btAdd)
                .addGap(72, 72, 72))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chLink)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(txNumEco, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addComponent(txModelo)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2)
                        .addComponent(jLabel5)
                        .addComponent(txHoro)
                        .addComponent(txSerie)
                        .addComponent(txMarca)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txNumEco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txHoro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(chLink)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btAdd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fillTitem() throws NumberFormatException {
        if(titemClass.equals("battery"))
        {
            row[5] = "Bateria";
            titem = new SIIL.Server.Battery();
        }
        else if(titemClass.equals("charger"))
        {
            row[5] = "Cargador";
            titem = new SIIL.Server.Charger();
        }
        else if(titemClass.equals("forklift"))
        {
            row[5] = "Montacargas";
            titem = new SIIL.Server.Forklift();
        }
        titem.setBD(BD);
        if(owner.equals("client"))
        {
            row[0] = null;
            titem.setNumber(null);
        }
        else if(owner.equals("SIIL"))
        {
            row[0] = txNumEco.getText();
            titem.setNumber(txNumEco.getText());
        }
        row[1] = txSerie.getText();
        if(txSerie.getText().length() > 0)
        {
            titem.setSerie(txSerie.getText());
        }
        else
        {
            titem.setSerie(null);
        }
        row[2] = txModelo.getText();
        if(txModelo.getText().length() > 0)
        {
            titem.setModelo(txModelo.getText());
        }
        else
        {
            titem.setModelo(null);
        }
        row[3] = txMarca.getText();
        if(txMarca.getText().length() > 0)
        {
            titem.setMarca(txMarca.getText());
        }
        else
        {
            titem.setMarca(null);
        }
        row[4] = txHoro.getText();
        if(titemClass.equals("forklift") && txHoro.getText().matches("^[0-9]+(.[0-9]+)?$"))
        {
            ((SIIL.Server.Forklift)titem).setHoromentro( Float.parseFloat(txHoro.getText()) );
        }
    }
    
    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        row = new String[7];
        if(titem!=null || owner.equals("client"))
        {
            titem = new SIIL.Server.Titem();
            fillTitem();
        }
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);
        }
        if(dbserver.getConnection() == null)
        {
            JOptionPane.showMessageDialog(this,
                "Conexión a Servidor Invalida",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        /*SIIL.Server.Building build = new SIIL.Server.Building(SIIL.servApp.cred.getBD(),"999",SIIL.servApp.cred.getSuc());
        if(build.isMatriz(conn))
        {
            add(titem, row);
        }
        else if(titem.checkRequest(conn,SIIL.servApp.cred.getSuc()))
        {
            add(titem, row);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "El equipo solicitado pertenece a otra sucursal", "Error Externo", JOptionPane.ERROR_MESSAGE);
        }*/
        add(titem, row);
        dbserver.close();
        dispose();
    }//GEN-LAST:event_btAddActionPerformed

        private void add(Titem t, String[] row) {
        titems.add(t);
        ((DefaultTableModel)tbTitems.getModel()).addRow(row);
    }
        
    private void txNumEcoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txNumEcoFocusLost
        SIIL.Server.Objeto obj = SIIL.Server.Objeto.parse(txNumEco.getText());
        if(obj == null)
        {
            JOptionPane.showMessageDialog(this, "El formato del Número Ecónomico es incorrecto", "Error Externo", JOptionPane.ERROR_MESSAGE);
        }
        else if(titemClass != obj.getItemClass())
        {
            JOptionPane.showMessageDialog(this, "El Número Ecónomico no corresponde al equipo indicado", "Error Externo", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
            Database dbserver = null;
            try 
            {
                serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
                dbserver = new Database(serverConfig);
            } 
            catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
            {
                Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);
            }
            Titem titem = (SIIL.Server.Titem)obj;
            if(!titem.checkExistTit(dbserver))
            {
                JOptionPane.showMessageDialog(this, "El Número Ecónomico no esta en la BD", "Error Externo", JOptionPane.ERROR_MESSAGE);
            }
            dbserver.close();
        }
    }//GEN-LAST:event_txNumEcoFocusLost

    private void txNumEcoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txNumEcoKeyReleased
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
        {
            SIIL.Server.Objeto obj = SIIL.Server.Objeto.parse(txNumEco.getText());
            if(obj == null)
            {
                JOptionPane.showMessageDialog(this, "El formato del Número Ecónomico es incorrecto", "Error Externo", JOptionPane.ERROR_MESSAGE);
            }
            else if(titemClass != obj.getItemClass())
            {
                JOptionPane.showMessageDialog(this, "El Número Ecónomico no corresponde al equipo indicado", "Error Externo", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                titem = (SIIL.Server.Titem)obj;
                titem.setBD(BD);
                SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
                Database dbserver = null;
                try 
                {
                    serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
                    dbserver = new Database(serverConfig);
                } 
                catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
                {
                    JOptionPane.showMessageDialog(this,
                        "Fallo importacion.",
                        "Error Interno",
                        JOptionPane.ERROR_MESSAGE
                    );
                    return;
                }
                titem.complete(dbserver);
                if(titem.getSerie() != null)
                {
                    txSerie.setText(titem.getSerie());
                }
                else
                {
                    txSerie.setText("");
                }
                if(titem.getModelo() != null)
                {
                    txModelo.setText(titem.getModelo());
                }
                else
                {
                    txModelo.setText("");
                }
                if(titem.getMarca() != null)
                {
                    txMarca.setText(titem.getMarca());
                }
                else
                {
                    txMarca.setText("");
                }
            }
        }
    }//GEN-LAST:event_txNumEcoKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JCheckBox chLink;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txHoro;
    private javax.swing.JTextField txMarca;
    private javax.swing.JTextField txModelo;
    private javax.swing.JTextField txNumEco;
    private javax.swing.JTextField txSerie;
    // End of variables declaration//GEN-END:variables
    
    JTable tbTitems;
    String titemClass;
    ArrayList<SIIL.Server.Titem> titems;
    String owner;
    String BD;
    SIIL.Server.Titem titem;
    String[] row;
    
    enum Mode
    {
        CreateMovReg,
        CreateTitem,
        UpdateTitem,        
    }
}
