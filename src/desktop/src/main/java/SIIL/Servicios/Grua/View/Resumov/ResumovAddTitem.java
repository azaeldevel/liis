
package SIIL.Servicios.Grua.View.Resumov;

import SIIL.Server.Database;
import SIIL.Server.MySQL;
import SIIL.Server.Titem;
import SIIL.Servicios.Grua.Forklift;
import SIIL.Servicios.Grua.Resumov;
import SIIL.trace.Trace;
import SIIL.trace.Value;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author Azael
 */
@Deprecated
public class ResumovAddTitem extends javax.swing.JInternalFrame 
{
    public String convertUso(JComboBox cbusomov) 
    {
        switch(cbusomov.getSelectedIndex())
        {
            case 0:
                break;
            case 1:
                return "disp";
            case 2:
                return "rtacp";
            case 3:
                return "pres";
            case 4:   
                return "rtaoc"; 
            case 5:    
                return "rep";  
            case 6:    
                return "vta"; 
            case 7:    
                return "mov";  
            case 8:
                return "tpint";
            case 9:
                return "baja";
            case 10:
                return "corr";
            case 11:
                return "otras";
        }
        return "";
    }
    
    /**
     * Creates new form ResumovAddTitem
     * @param bd
     * @param desktopPane
     * @param aThis
     * @param rs
     */
    public ResumovAddTitem(String bd, javax.swing.JDesktopPane desktopPane,ResumovList aThis,SIIL.Servicios.Grua.Resumov rs) 
    {
        initComponents();
        
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);
        }
        
        if(dbserver.getConnection() == null)
        {
            JOptionPane.showMessageDialog(this,
                "Conexion a Servidor Invalida",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
                );
            return;
        }
        rs.download(dbserver);
        txNumber.setEnabled(true);
        txNumber.setText(rs.getTtm().getNumber());
        comp = rs.getCompany();
        txClient.setText(comp.getNumber());        
        txClient.setEnabled(true);
        cbusomov.setSelectedItem(rs.getUso(true));
        cbusomov.setEnabled(true);
        dateMov.setDate(rs.getFhMov());
        dateMov.setEnabled(true);
        txNote.setText(rs.getNote());
        txNote.setEnabled(true);
        this.numeco = numeco;
        op = "update";
        rmvl = aThis;
        BD = bd;   
        this.rs = rs;
    }

        /**
     * Creates new form ResumovAddTitem
     */
    public ResumovAddTitem(String bd, javax.swing.JDesktopPane desktopPane,ResumovList aThis) 
    {
        initComponents();
        this.numeco = numeco;
        op = "insert";
        rmvl = aThis;
        BD = bd;       
    }
    
    /**
     * Creates new form ResumovAddTitem
     */
    public ResumovAddTitem(String numeco,String bd, javax.swing.JDesktopPane desktopPane) 
    {
        initComponents();
        this.numeco = numeco;
        op = "update";
        BD = bd;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txNumber = new javax.swing.JTextField();
        btClient = new javax.swing.JButton();
        lbClient = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txClient = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbusomov = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        dateMov = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txNote = new javax.swing.JTextArea();
        btSave = new javax.swing.JButton();
        chEnlazar = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        txNumEcoFork = new javax.swing.JTextField();

        setClosable(true);

        jLabel1.setText("Numero Económico");

        txNumber.setEnabled(false);

        btClient.setText("...");
        btClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClientActionPerformed(evt);
            }
        });

        lbClient.setText("#");

        jLabel2.setText("Cliente");

        txClient.setEnabled(false);
        txClient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txClientKeyReleased(evt);
            }
        });

        jLabel4.setText("Uso");

        cbusomov.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione..", "Disponible", "Renta Corto Plazo", "Préstamo", "Renta Opcion de Compra", "Reparación", "Venta", "Movimiento", "T. de Pintura", "Baja", "Cubriendo", "Otras...", " " }));
        cbusomov.setEnabled(false);

        jLabel5.setText("Fecha");

        dateMov.setEnabled(false);

        jLabel6.setText("Nota");

        txNote.setColumns(20);
        txNote.setRows(5);
        txNote.setEnabled(false);
        jScrollPane1.setViewportView(txNote);

        btSave.setText("Guardar");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        chEnlazar.setText("Enlzar");
        chEnlazar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chEnlazarActionPerformed(evt);
            }
        });

        jLabel7.setLabelFor(txNumEcoFork);
        jLabel7.setText("Numero Ecónomico de Montacargas");

        txNumEcoFork.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lbClient, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dateMov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txClient, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btClient))
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txNumber, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(chEnlazar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7)
                                    .addComponent(txNumEcoFork, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btSave)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbusomov, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chEnlazar)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txNumEcoFork, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbClient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txClient, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btClient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbusomov, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateMov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btSave)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClientActionPerformed
        comp = new SIIL.Server.Company();
        JFrame frm = new JFrame();
        JDialog dlg = new JDialog(frm,"Seleccionar cliente",true);
        SIIL.Clientes.ReadSelect read = new SIIL.Clientes.ReadSelect(comp, SIIL.servApp.cred.getBD());
        dlg.setContentPane(read);
        dlg.setSize(460, 260);
        dlg.setVisible(true);
        txClient.setText(comp.getNumber());
        lbClient.setText(comp.getName());
    }//GEN-LAST:event_btClientActionPerformed

    private void txClientKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txClientKeyReleased
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
        {
            comp = new SIIL.Server.Company();
            comp.setBD(SIIL.servApp.cred.getBD());
            comp.setNumber(txClient.getText());
            SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
            Database dbserver = null;
            try 
            {
                serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
                dbserver = new Database(serverConfig);
            } 
            catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
            {
                JOptionPane.showMessageDialog(this,
                    "Fallo importacion.",
                    "Error Interno",
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }
            if(comp.complete(dbserver))
            {
                lbClient.setText(comp.getName());
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Numero de cliente desconocido",
                    "Error externo", JOptionPane.ERROR_MESSAGE);
            }
            dbserver.close();
        }
    }//GEN-LAST:event_txClientKeyReleased

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            JOptionPane.showMessageDialog(null,
                "Conexion a Servidor Invalida",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
                );
            return;
        }            
        
        
        String number;
        if(txNumEcoFork.getText().length() > 0)
        {
            number = txNumEcoFork.getText();
        }
        else if(txNumber.getText().length() > 0)
        {
                number = txNumber.getText();
        }
        else
        {
            number = "-";
        }
        Trace trace = new Trace(SIIL.servApp.cred.getBD(),SIIL.servApp.cred.getUser(), "Resumen de Movimiento Add : '" + number + "'");
            
            
        try 
        {
            int reg = trace.insert(dbserver);
            Value val = new Value();
            
            val = new Value();
            val.setTraceID(trace.getTrace());
            val.setTable("Resumov");
            val.setField("operator");
            val.setAfter(SIIL.servApp.cred.getUser().toString());
            val.setBrief("Quien hace");
            val.setLlave("-");
            val.insert(dbserver);
            
            val = new Value();
            val.setTraceID(trace.getTrace());
            val.setTable("Resumov");
            val.setField("titem");            
            val.setAfter(number);
            val.setBrief("Registro afectado");
            val.setLlave("-");
            val.insert(dbserver);
        } 
        catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(this,
                        ex.getMessage(),
                        "Error Interno",
                        JOptionPane.ERROR_MESSAGE
            );
           return;
        }
            
        
        Titem tm;
        
        //SOlo enlaza el recusros al montacarga mensoionado, no cre nuevo registro
        if(chEnlazar.isSelected())
        {
            //Que tipo de recurso es?
            SIIL.Server.Objeto obj = SIIL.Server.Objeto.parse(txNumber.getText());
            Forklift forklift = new Forklift();
            forklift.setBD(BD);
            forklift.setNumber(txNumEcoFork.getText());
            if(!forklift.getTipo(dbserver).equals("Fk"))
            {
                JOptionPane.showMessageDialog(this, txNumEcoFork.getText() + " No es un montacargas, verifique la información", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;
            }
            rs = new Resumov(); 
            
            Value val = new Value();
            val = new Value();
            val.setTraceID(trace.getTrace());
            val.setTable("Resumov");
            val.setField("titem");            
            val.setAfter(obj.getNumber());
            val.setBrief("Linked to");
            val.setLlave("-");
            int rLink = rs.link(dbserver, (Titem)obj, forklift);
            if(rLink == 1)
            {
                try 
                {
                    val.insert(dbserver);
                    dbserver.commit();
                    JOptionPane.showMessageDialog(this, "Operacion completada");
                    rmvl.reloadTable();
                    dispose();
                    return;
                } 
                catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(this,
                        ex.getMessage(),
                        "Error Interno",
                        JOptionPane.ERROR_MESSAGE
                    );
                    return;
                }
            }
            else
            {
                try 
                {
                    dbserver.rollback();
                    JOptionPane.showMessageDialog(this, "Los datos son inconcistente no se puede realiza la operacion de enlazado", "Error Externo", JOptionPane.ERROR_MESSAGE);
                    return;
                } 
                catch (SQLException ex) 
                {
                    JOptionPane.showMessageDialog(this,
                        ex.getMessage(),
                        "Error Interno",
                        JOptionPane.ERROR_MESSAGE
                    );
                    return;
                }
            }
        }
        else if(!chEnlazar.isSelected() && op.equals("update"))
        {
            if(rs == null) rs = new Resumov();
            tm = new Titem();
            tm.setBD(SIIL.servApp.cred.getBD());
            SIIL.Server.Objeto obj = SIIL.Server.Objeto.parse(txNumber.getText());
            if(obj == null)
            {
                //JOptionPane.showMessageDialog(this, "El formato del Número Ecónomico es incorrecto", "Error Externo", JOptionPane.ERROR_MESSAGE);
                //return;
            }
            else if(obj.getItemClass() == null)
            {
                JOptionPane.showMessageDialog(this, "Tipo de Articulos incorrecto, la clases no es adecuada para la operación", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;
            }
            tm.setNumber(txNumber.getText());        
            rs.setTtm(tm);

            if(comp == null)
            {
                JOptionPane.showMessageDialog(this, "Seleccione el cliente", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;
            }
            rs.setCompany(comp);
            //if(cbSuc.getSelectedIndex() == 0)
            //{
                //JOptionPane.showMessageDialog(this, "Seleccione la sucursal", "Error Externo", JOptionPane.ERROR_MESSAGE);
                //return;            
            //}
            //rs.setSucursal(cbSuc);    
            if(cbusomov.getSelectedIndex() == 0)
            {
                JOptionPane.showMessageDialog(this, "Seleccione el Tipo de Movimiento", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;
            }
            rs.setUso(convertUso(cbusomov));
            if(dateMov.getDate() == null)
            {
                JOptionPane.showMessageDialog(this, "Seleccione la fecha", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;            
            }
            rs.setFhMov(dateMov.getDate());

            rs.setNote(txNote.getText());
        }
        else if(!chEnlazar.isSelected() && op.equals("insert"))
        {
            rs = new Resumov();
            tm = new Titem();
            tm.setBD(SIIL.servApp.cred.getBD());
            SIIL.Server.Objeto obj = SIIL.Server.Objeto.parse(txNumber.getText());
            if(obj == null)
            {
                //JOptionPane.showMessageDialog(this, "El formato del Número Ecónomico es incorrecto", "Error Externo", JOptionPane.ERROR_MESSAGE);
                //return;
            }
            else if(obj.getItemClass() == null)
            {
                JOptionPane.showMessageDialog(this, "Tipo de Articulos incorrecto, la clases no es adecuada para la operación", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;
            }
            tm.setNumber(txNumber.getText());        
            rs.setTtm(tm);

            if(comp == null)
            {
                JOptionPane.showMessageDialog(this, "Seleccione el cliente", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;
            }
            rs.setCompany(comp);
            //if(cbSuc.getSelectedIndex() == 0)
            //{
                //JOptionPane.showMessageDialog(this, "Seleccione la sucursal", "Error Externo", JOptionPane.ERROR_MESSAGE);
                //return;            
            //}
            //rs.setSucursal(cbSuc);    
            if(cbusomov.getSelectedIndex() == 0)
            {
                JOptionPane.showMessageDialog(this, "Seleccione el Tipo de Movimiento", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;
            }
            rs.setUso(cbusomov);
            if(dateMov.getDate() == null)
            {
                JOptionPane.showMessageDialog(this, "Seleccione la fecha", "Error Externo", JOptionPane.ERROR_MESSAGE);
                return;            
            }
            rs.setFhMov(dateMov.getDate());

            rs.setNote(txNote.getText());
        }
        
        int res = 0;
        try 
        {
            if(op.equals("update"))
            {
                res = rs.update(dbserver);
            }
            else if(op.equals("insert"))
            {
                res = rs.insertTitem(dbserver);
            }
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(ResumovAddTitem.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(res == 1)
        {
            try 
            {
                dbserver.commit();
                JOptionPane.showMessageDialog(this,"Registro agegado correctamente");
                rmvl.reloadTable();
                dispose();
            } 
            catch (SQLException ex) 
            {
                Logger.getLogger(ResumovAddTitem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            try 
            {
                dbserver.rollback();
                JOptionPane.showMessageDialog(this,"Fallo la operacion los datos no fueron almacenados"
                            ,"Error Interno",JOptionPane.ERROR_MESSAGE);
            } 
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this,
                        ex.getMessage(),
                        "Error Interno",
                        JOptionPane.ERROR_MESSAGE
                );
                return;
            }
        }
    }//GEN-LAST:event_btSaveActionPerformed

    private void chEnlazarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chEnlazarActionPerformed
        if(chEnlazar.isSelected())
        {
            txClient.setEnabled(false);
            txNote.setEnabled(false);
            txNumEcoFork.setEnabled(true);
            txNumber.setEnabled(true);
            //cbSuc.setEnabled(false);
            cbusomov.setEnabled(false);
            dateMov.setEnabled(false);
        }
        else
        {
            txClient.setEnabled(true);
            txNote.setEnabled(true);
            txNumEcoFork.setEnabled(false);
            txNumber.setEnabled(true);
            //cbSuc.setEnabled(true);
            cbusomov.setEnabled(true);
            dateMov.setEnabled(true);
        }
    }//GEN-LAST:event_chEnlazarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClient;
    private javax.swing.JButton btSave;
    private javax.swing.JComboBox cbusomov;
    private javax.swing.JCheckBox chEnlazar;
    private org.jdesktop.swingx.JXDatePicker dateMov;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbClient;
    private javax.swing.JTextField txClient;
    private javax.swing.JTextArea txNote;
    private javax.swing.JTextField txNumEcoFork;
    private javax.swing.JTextField txNumber;
    // End of variables declaration//GEN-END:variables

    SIIL.Server.Company comp;
    String numeco;
    String op;
    ResumovList rmvl;
    String BD;
    SIIL.Servicios.Grua.Resumov rs;
}
