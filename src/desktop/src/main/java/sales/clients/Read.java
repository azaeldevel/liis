
package sales.clients;

import SIIL.Server.Company;
import SIIL.Server.Database;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import org.jdesktop.swingx.JXDialog;
import org.xml.sax.SAXException;

/**
 *
 * @author Azael Reyes
 */
public class Read extends javax.swing.JPanel 
{    
    private JXDialog dialog;
    private ReadTableModel.Mode mode;
    private Database dbserver;
    private Company[] selection;

    private void loadData(String search,int lenght) 
    {
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            JOptionPane.showMessageDialog(this,
                "Fallo importacion.",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        
        ReadTableModel model = (ReadTableModel) tbList.getModel();
        tbList.setModel(new ReadTableModel());
        try
        {
            model.search(dbserver, null, " ORDER BY name DESC ", 0, 0);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(Read.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        tbList.setModel(model);
    }
    
    
    public Company[] getSelection()
    {
        Company[] comps = new Company[tbList.getSelectedRowCount()];
        int[] selc = tbList.getSelectedRows();
        ReadTableModel model = (ReadTableModel) tbList.getModel();
        for(int i = 0; i < tbList.getSelectedRowCount(); i++)
        {
            comps[i] = model.getValueAt(selc[i]);
        }
        this.selection = comps;
        return selection;
    }
    
    /**
     * Creates new form Clients
     * @param mode
     */
    public Read(ReadTableModel.Mode mode) 
    {
        initComponents();
        this.mode = mode;
        loadData(search.getText(),(int) spCant.getValue());
        this.mode = ReadTableModel.Mode.DISPLAY;       
        
        if(mode == ReadTableModel.Mode.DISPLAY)
        {       
            loadData(search.getText(), (int) spCant.getValue());
        }
        else if(mode == ReadTableModel.Mode.SELECT)
        {
            ;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbList = new org.jdesktop.swingx.JXTable();
        search = new org.jdesktop.swingx.JXSearchField();
        jLabel1 = new javax.swing.JLabel();
        spCant = new javax.swing.JSpinner();

        tbList.setModel(new ReadTableModel());
        tbList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbList);

        search.setToolTipText("Buscar...");
        search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFocusLost(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel1.setText("Cant.");

        spCant.setValue(20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spCant, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(spCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        ReadTableModel model = new ReadTableModel();
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            JOptionPane.showMessageDialog(this,
                "Fallo importacion.",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        
        try 
        {
            model.search(dbserver, search.getText());
            tbList.setModel(model);
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(getClass().getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void tbListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListMouseClicked
        if (evt.getClickCount() == 2 && !evt.isConsumed()) 
        {
            evt.consume();
            ReadTableModel model = (ReadTableModel) tbList.getModel();
            //this.selection = model.getCompany(tbList.getSelectedRow());  
            getSelection();
            if(dialog != null) dialog.dispose();
        }
    }//GEN-LAST:event_tbListMouseClicked

    private void searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusGained
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            JOptionPane.showMessageDialog(this,
                "Fallo importacion.",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
    }//GEN-LAST:event_searchFocusGained

    private void searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFocusLost
        this.dbserver.close();
        this.dbserver = null;
    }//GEN-LAST:event_searchFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXSearchField search;
    private javax.swing.JSpinner spCant;
    private org.jdesktop.swingx.JXTable tbList;
    // End of variables declaration//GEN-END:variables

    /**
     * @param dialog the dialog to set
     */
    public void setDialog(JXDialog dialog) {
        this.dialog = dialog;
    }
}
