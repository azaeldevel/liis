/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stock;

import SIIL.Server.Database;
import SIIL.services.grua.Battery;
import SIIL.services.grua.Charger;
import SIIL.services.grua.Forklift;
import core.Dialog;
import database.mysql.stock.Titem;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import process.ImportsCN;
import process.Return;

/**
 *
 * @author azael
 */
public class AddEquipo extends javax.swing.JPanel implements core.DialogContent
{

    private core.Dialog dialog;
    
    /**
     * Creates new form AddEquipo
     */
    public AddEquipo() {
        initComponents();
        bgTitem.add(rbForklift);
        bgTitem.add(rbBattery);
        bgTitem.add(rbCharger);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgTitem = new javax.swing.ButtonGroup();
        rbBattery = new javax.swing.JRadioButton();
        rbCharger = new javax.swing.JRadioButton();
        rbForklift = new javax.swing.JRadioButton();
        btNumber = new javax.swing.JLabel();
        txNumber = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txMark = new javax.swing.JTextField();
        txModel = new javax.swing.JTextField();
        txSerie = new javax.swing.JTextField();
        txDescripcion = new javax.swing.JTextField();
        btSave = new javax.swing.JButton();

        rbBattery.setText("Bateria");

        rbCharger.setText("Cargador");

        rbForklift.setText("Montacargas");

        btNumber.setText("Número");

        jLabel1.setText("Marca");

        jLabel2.setText("Modelo");

        jLabel3.setText("Serie");

        jLabel4.setText("Descriptción");

        btSave.setText("Guardar");
        btSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txDescripcion))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbBattery)
                                .addGap(44, 44, 44)
                                .addComponent(rbCharger)
                                .addGap(46, 46, 46)
                                .addComponent(rbForklift))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btNumber)
                                    .addComponent(jLabel1))
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txMark, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(txNumber)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txSerie, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(txModel))))
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSave)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbBattery)
                    .addComponent(rbCharger)
                    .addComponent(rbForklift))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNumber)
                    .addComponent(txNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txMark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(btSave)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSaveActionPerformed

        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            //Logger.getLogger(CatalogoTest.class.getName()).log(Level.SEVERE, null, ex);
            //fail(ex.getMessage());
        }
        String lg = "";
        String number = txNumber.getText();
        boolean haveSerie = !txSerie.getText().isEmpty();
        String serie = "";
        if(haveSerie)
        {
            System.out.println("Tiene serie " + txSerie.getText());
            serie = txSerie.getText();
        }
        else
        {
            System.out.println("No tiene serie ");
        }
        ArrayList<String> log = new ArrayList<>();
        Return<Integer> result = null;
        if(rbForklift.isSelected())        
        {
            Forklift forklift = new Forklift(-1);
            try
            {
                lg = "Agregando Montacargas " + number + " ... ";
                result = forklift.insert(dbserver.getConnection(),number,txDescripcion.getText(),Titem.importType(dbserver, number),haveSerie,serie);
                if(!txMark.getText().isEmpty())forklift.upMake(dbserver.getConnection(), txMark.getText());
                if(!txModel.getText().isEmpty())forklift.upModel(dbserver.getConnection(), txModel.getText());
                if(result.isFlag())                    
                {
                    Flow flow = new Flow(-1);
                    result = flow.insert(dbserver.getConnection(), new Date(), haveSerie, serie,forklift);
                    lg += "Done";
                    log.add(lg);
                }
                System.out.println(lg);
            }
            catch (SQLException ex)
            {
                Logger.getLogger(ImportsCN.class.getName()).log(Level.SEVERE, null, ex);
                lg += "Fail : " + number + " -- " + ex.getMessage();
                log.add(lg);
            }
        }
        else if(rbBattery.isSelected())
        {
            Battery battery = new Battery(-1);
            try
            {
                lg = "Agregando Bateria " + number + " ... ";
                result = battery.insert(dbserver.getConnection(),number,txDescripcion.getText(),Titem.importType(dbserver, number),haveSerie,serie);
                if(!txMark.getText().isEmpty())battery.upMake(dbserver.getConnection(), txMark.getText());
                if(!txModel.getText().isEmpty())battery.upModel(dbserver.getConnection(), txModel.getText());
                Flow flow = new Flow(-1);
                if(result.isFlag()) 
                {
                    result = flow.insert(dbserver.getConnection(), new Date(), haveSerie, serie,battery);
                    lg += "Done";
                    log.add(lg);
                }                
                System.out.println(lg);
            }
            catch (SQLException ex)
            {
                lg += "Fail : " + number + " -- " + ex.getMessage();
                log.add(lg);
                Logger.getLogger(ImportsCN.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(rbCharger.isSelected())
        {
            Charger charger = new Charger(-1);
            try
            {
                lg = "Agregando Cargador " + number + " ... ";
                result = charger.insert(dbserver.getConnection(),number,txDescripcion.getText(),Titem.importType(dbserver, number),haveSerie,serie);
                if(!txMark.getText().isEmpty())charger.upMake(dbserver.getConnection(), txMark.getText());
                if(!txModel.getText().isEmpty())charger.upModel(dbserver.getConnection(), txModel.getText());
                Flow flow = new Flow(-1);
                if(result.isFlag()) 
                {
                    result = flow.insert(dbserver.getConnection(), new Date(), haveSerie, serie,charger);
                    lg += "Done";
                    log.add(lg);
                }                
                System.out.println(lg);
            }
            catch (SQLException ex)
            {
                Logger.getLogger(ImportsCN.class.getName()).log(Level.SEVERE, null, ex);
                lg += "Fail : " + number + " -- " + ex.getMessage();
                log.add(lg);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,
                    "Elija un tipo de equipo en las opciones de arriba ",
                    "Error Interno",
                    JOptionPane.ERROR_MESSAGE
            );
            return;
        }

        
        int insertedID = 0;
        if(result.isFail())
        {
            JOptionPane.showMessageDialog(this,
                    "Fallo la operación de guardar . " + number ,
                    "Error Interno",
                    JOptionPane.ERROR_MESSAGE
            );
        }
        insertedID = result.getParam();
        if(insertedID > 0)
        {            
            try 
            {
                dbserver.commit();
                System.out.println("Se genero el registro para " + number);
            }
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this,
                    ex.getMessage(),
                    "Error Interno",
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }
        }
        else
        {
            try 
            {
                dbserver.rollback();
            } 
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this,
                    ex.getMessage() ,
                    "Error Interno",
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }
        }
        
        dbserver.close();
        dialog.dispose();
    }//GEN-LAST:event_btSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgTitem;
    private javax.swing.JLabel btNumber;
    private javax.swing.JButton btSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton rbBattery;
    private javax.swing.JRadioButton rbCharger;
    private javax.swing.JRadioButton rbForklift;
    private javax.swing.JTextField txDescripcion;
    private javax.swing.JTextField txMark;
    private javax.swing.JTextField txModel;
    private javax.swing.JTextField txNumber;
    private javax.swing.JTextField txSerie;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setDialog(Dialog dialog) 
    {
        this.dialog = dialog;
    }
}
