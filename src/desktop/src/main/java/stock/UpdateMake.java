
package stock;

import SIIL.Server.Database;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/**
 *
 * @author Azael Reyes
 */
public class UpdateMake extends javax.swing.JPanel 
{
    private final Flow flow;
    private final JInternalFrame contenerdor;
    private final SearchHequi parent;
    
    /**
     * Creates new form UpdateMake
     * @param flow
     * @param contenerdor
     * @param parent
     */
    public UpdateMake(Flow flow,JInternalFrame contenerdor,SearchHequi parent) 
    {
        initComponents();
        this.flow = flow;
        txNumber.setText(flow.getItem().getNumber());
        txDescription.setText(flow.getItem().getDescription());
        this.contenerdor = contenerdor;
        this.parent = parent;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txNumber = new javax.swing.JTextField();
        txDescription = new javax.swing.JTextField();
        txMake = new org.jdesktop.swingx.JXTextField();
        txModelo = new org.jdesktop.swingx.JXTextField();
        txSerie = new org.jdesktop.swingx.JXTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mnUpdate = new javax.swing.JButton();

        jLabel1.setText("Numero");

        jLabel2.setText("Descripcion");

        jLabel3.setText("Marca");

        jLabel4.setText("Modelo");

        jLabel5.setText("Serie");

        mnUpdate.setText("Actualizar");
        mnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txMake, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mnUpdate)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mnUpdate))
                .addContainerGap(69, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void mnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnUpdateActionPerformed
        
        SIIL.core.config.Server serverConfig = new SIIL.core.config.Server();        
        Database dbserver = null;
        try 
        {
            serverConfig.loadFile(new java.io.File(".").getCanonicalPath());
            dbserver = new Database(serverConfig);
        } 
        catch (ClassNotFoundException | SQLException | IOException | ParserConfigurationException | SAXException ex) 
        {
            JOptionPane.showMessageDialog(this,
                "Fallo importacion.",
                "Error Interno",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
        
        if(txMake.getText().length() > 0)
        {
            try 
            {
                flow.getItem().upMake(dbserver.getConnection(),txMake.getText());
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(UpdateMake.class.getName()).log(Level.SEVERE, null, ex);
                try 
                {
                    dbserver.rollback();
                } 
                catch (SQLException ex1) 
                {
                    Logger.getLogger(UpdateMake.class.getName()).log(Level.SEVERE, null, ex1);
                }
                return;
            }
        }
        
        if(txModelo.getText().length() > 0)
        {
            try 
            {
                flow.getItem().upModel(dbserver.getConnection(), txModelo.getText());
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(UpdateMake.class.getName()).log(Level.SEVERE, null, ex);
                try 
                {
                    dbserver.rollback();
                } 
                catch (SQLException ex1) 
                {
                    Logger.getLogger(UpdateMake.class.getName()).log(Level.SEVERE, null, ex1);
                }
                return;
            }
        }
        
        if(txSerie.getText().length() > 0)
        {
            try 
            {
                flow.upSerie(dbserver.getConnection(), txSerie.getText());
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(UpdateMake.class.getName()).log(Level.SEVERE, null, ex);
                try 
                {
                    dbserver.rollback();
                } 
                catch (SQLException ex1) 
                {
                    Logger.getLogger(UpdateMake.class.getName()).log(Level.SEVERE, null, ex1);
                }
                return;
            }
        }        
        
        try 
        {
            
            int optionPane = JOptionPane.showConfirmDialog(
            this,
            "Desea guardar los cambios de '" + flow.getItem().getNumber() + "'",
            "Confirmar operaci√≥n",
            JOptionPane.YES_NO_OPTION);
            if(optionPane == JOptionPane.YES_OPTION)
            {
                dbserver.commit();
                if(this.parent != null) parent.reload(dbserver);
                if(this.contenerdor != null) contenerdor.dispose();
            }
            else
            {
                dbserver.rollback();
            }
            dbserver.close();
        } 
        catch (SQLException ex) 
        {
            Logger.getLogger(UpdateMake.class.getName()).log(Level.SEVERE, null, ex);
            dbserver.close();
        }
    }//GEN-LAST:event_mnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton mnUpdate;
    private javax.swing.JTextField txDescription;
    private org.jdesktop.swingx.JXTextField txMake;
    private org.jdesktop.swingx.JXTextField txModelo;
    private javax.swing.JTextField txNumber;
    private org.jdesktop.swingx.JXTextField txSerie;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the flow
     */
    public Flow getFlow() {
        return flow;
    }
}
